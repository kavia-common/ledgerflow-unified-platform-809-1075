{"is_source_file": true, "format": "JavaScript", "description": "This file defines a service module for managing Continuous Integration (CI) run records within a backend API. It includes functions to list, retrieve, create, update, and get the latest CI runs associated with projects within workspaces, implementing access control based on user roles.", "external_files": ["../lib/prisma", "./workspaces"], "external_methods": ["requireWorkspaceRole"], "published": ["listCiRuns", "getCiRun", "createCiRun", "updateCiRun", "getLatestCiStatus"], "classes": [], "methods": [{"name": "listCiRuns(userId, workspaceId, projectId, { environmentId, status, branch, limit = 50, offset = 0 } = {})", "description": "Lists CI runs for a specific project, with optional filtering parameters such as environment ID, status, branch, and pagination controls.", "scope": "", "scopeKind": ""}, {"name": "getCiRun(userId, workspaceId, projectId, ciRunId)", "description": "Retrieves details of a specific CI run by its ID within a project and workspace.", "scope": "", "scopeKind": ""}, {"name": "createCiRun(userId, workspaceId, projectId, payload = {})", "description": "Creates a new CI run record for a project, accepting various details such as environment, status, commit SHA, branch, logs URL, and trigger information.", "scope": "", "scopeKind": ""}, {"name": "updateCiRun(userId, workspaceId, projectId, ciRunId, payload = {})", "description": "Updates metadata or status of an existing CI run, with validation of environment IDs.", "scope": "", "scopeKind": ""}, {"name": "getLatestCiStatus(userId, workspaceId, projectId, { branch, environmentId } = {})", "description": "Retrieves the most recent CI run for a project, optionally filtered by branch or environment.", "scope": "", "scopeKind": ""}, {"name": "ensureProjectInWorkspace(projectId, workspaceId)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["requireWorkspaceRole", "ensureProjectInWorkspace", "prisma.project.findFirst", "prisma.ciRun.count", "prisma.ciRun.findMany", "prisma.ciRun.findFirst", "prisma.environment.findFirst", "prisma.ciRun.create", "prisma.ciRun.update"], "search-terms": ["CI", "ciRun", "project", "workspace", "createCiRun", "listCiRuns", "getCiRun", "updateCiRun", "getLatestCiStatus"], "state": 2, "file_id": 33, "knowledge_revision": 87, "git_revision": "", "ctags": [{"_type": "tag", "name": "createCiRun", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/ciRuns.js", "pattern": "/^async function createCiRun(userId, workspaceId, projectId, payload = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId, workspaceId, projectId, payload = {})"}, {"_type": "tag", "name": "ensureProjectInWorkspace", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/ciRuns.js", "pattern": "/^function ensureProjectInWorkspace(projectId, workspaceId) {$/", "language": "JavaScript", "kind": "function", "signature": "(projectId, workspaceId)"}, {"_type": "tag", "name": "getCiRun", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/ciRuns.js", "pattern": "/^async function getCiRun(userId, workspaceId, projectId, ciRunId) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId, workspaceId, projectId, ciRunId)"}, {"_type": "tag", "name": "getLatestCiStatus", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/ciRuns.js", "pattern": "/^async function getLatestCiStatus(userId, workspaceId, projectId, { branch, environmentId } = {})/", "language": "JavaScript", "kind": "function", "signature": "(userId, workspaceId, projectId, { branch, environmentId } = {})"}, {"_type": "tag", "name": "listCiRuns", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/ciRuns.js", "pattern": "/^  listCiRuns,$/", "language": "JavaScript", "kind": "field", "scope": "module.exports", "scopeKind": "class"}, {"_type": "tag", "name": "listCiRuns", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/ciRuns.js", "pattern": "/^async function listCiRuns(userId, workspaceId, projectId, { environmentId, status, branch, limit/", "language": "JavaScript", "kind": "function", "signature": "(userId, workspaceId, projectId, { environmentId, status, branch, limit = 50, offset = 0 } = {})"}, {"_type": "tag", "name": "prisma", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/ciRuns.js", "pattern": "/^const prisma = require('..\\/lib\\/prisma');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "projectId", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/ciRuns.js", "pattern": "/^    projectId,$/", "language": "JavaScript", "kind": "field", "scope": "getLatestCiStatus.where", "scopeKind": "class"}, {"_type": "tag", "name": "projectId", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/ciRuns.js", "pattern": "/^    projectId,$/", "language": "JavaScript", "kind": "field", "scope": "listCiRuns.where", "scopeKind": "class"}, {"_type": "tag", "name": "updateCiRun", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/ciRuns.js", "pattern": "/^async function updateCiRun(userId, workspaceId, projectId, ciRunId, payload = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId, workspaceId, projectId, ciRunId, payload = {})"}], "hash": "2748c31f6dbd12f36ea4b6c847e01ce0", "format-version": 4, "code-base-name": "ledgerflow_backend_api", "filename": "ledgerflow_backend_api/src/services/ciRuns.js", "fields": [{"name": "listCiRuns,", "scope": "module.exports", "scopeKind": "class", "description": "unavailable"}, {"name": "projectId,", "scope": "getLatestCiStatus.where", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"87": ""}]}