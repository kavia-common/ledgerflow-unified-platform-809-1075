{"is_source_file": true, "format": "JavaScript", "description": "This file provides authentication services such as user signup, login, session management, token creation, and renewal, using bcrypt for password hashing, JWT for access tokens, and crypto for refresh tokens. It interacts with a Prisma ORM to persist user and session data.", "external_files": ["../lib/prisma"], "external_methods": ["bcrypt.hash", "bcrypt.compare", "jwt.sign", "crypto.randomBytes", "crypto.createHash"], "published": ["signup", "login", "me", "refresh", "logout"], "classes": [], "methods": [{"name": "secondsFromNow(seconds)", "description": "Calculates a future date by adding a specified number of seconds to current time.", "scope": "", "scopeKind": ""}, {"name": "daysFromNow(days)", "description": "Calculates a future date by adding a specified number of days to current time.", "scope": "", "scopeKind": ""}, {"name": "hashToken(token)", "description": "Creates a SHA-256 hash of a token, typically for secure storage.", "scope": "", "scopeKind": ""}, {"name": "signAccessToken(user)", "description": "Creates a JWT access token with user ID and email; signs with secret.", "scope": "", "scopeKind": ""}, {"name": "createRefreshTokenPair()", "description": "Generates a random refresh token and its hashed version.", "scope": "", "scopeKind": ""}, {"name": "createSessionForUser(userId, { userAgent, ipAddress })", "description": "Creates a session record in the database with a refresh token.", "scope": "", "scopeKind": ""}, {"name": "revokeSession(where)", "description": "Marks a session as revoked (soft delete) in the database.", "scope": "", "scopeKind": ""}, {"name": "signup({ email, password, name }, context = {})", "description": "Registers a new user, hashes password, creates session, and returns user info with tokens.", "scope": "", "scopeKind": ""}, {"name": "login({ email, password }, context = {})", "description": "Authenticates user credentials, creates session, and returns user info with tokens.", "scope": "", "scopeKind": ""}, {"name": "me(userId)", "description": "Retrieves current user info based on user ID.", "scope": "", "scopeKind": ""}, {"name": "refresh({ sessionToken, refreshToken }, context = {})", "description": "Validates a refresh token, rotates refresh token, and issues a new access token.", "scope": "", "scopeKind": ""}, {"name": "logout({ sessionToken, refreshToken })", "description": "Revokes a session based on session token or refresh token.", "scope": "", "scopeKind": ""}], "calls": ["prisma.user.findUnique", "prisma.session.create", "prisma.session.updateMany", "prisma.session.findFirst", "prisma.session.update"], "search-terms": ["auth service", "JWT tokens", "refresh token", "session management", "bcrypt password"], "state": 2, "file_id": 15, "knowledge_revision": 34, "git_revision": "", "ctags": [{"_type": "tag", "name": "ACCESS_TOKEN_TTL_SEC", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/auth.js", "pattern": "/^const ACCESS_TOKEN_TTL_SEC = 15 * 60; \\/\\/ 15 minutes$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "REFRESH_TOKEN_TTL_DAYS", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/auth.js", "pattern": "/^const REFRESH_TOKEN_TTL_DAYS = 30; \\/\\/ 30 days$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "bcrypt", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/auth.js", "pattern": "/^const bcrypt = require('bcrypt');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "createRefreshTokenPair", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/auth.js", "pattern": "/^function createRefreshTokenPair() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "createSessionForUser", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/auth.js", "pattern": "/^async function createSessionForUser(userId, { userAgent, ipAddress }) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId, { userAgent, ipAddress })"}, {"_type": "tag", "name": "crypto", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/auth.js", "pattern": "/^const crypto = require('crypto');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "daysFromNow", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/auth.js", "pattern": "/^function daysFromNow(days) {$/", "language": "JavaScript", "kind": "function", "signature": "(days)"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/auth.js", "pattern": "/^  const payload = { sub: user.id, email: user.email };$/", "language": "JavaScript", "kind": "property", "scope": "signAccessToken.payload", "scopeKind": "class"}, {"_type": "tag", "name": "hashToken", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/auth.js", "pattern": "/^function hashToken(token) {$/", "language": "JavaScript", "kind": "function", "signature": "(token)"}, {"_type": "tag", "name": "jwt", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/auth.js", "pattern": "/^const jwt = require('jsonwebtoken');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/auth.js", "pattern": "/^async function login({ email, password }, context = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "({ email, password }, context = {})"}, {"_type": "tag", "name": "logout", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/auth.js", "pattern": "/^async function logout({ sessionToken, refreshToken }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ sessionToken, refreshToken })"}, {"_type": "tag", "name": "me", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/auth.js", "pattern": "/^async function me(userId) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId)"}, {"_type": "tag", "name": "payload", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/auth.js", "pattern": "/^  const payload = { sub: user.id, email: user.email };$/", "language": "JavaScript", "kind": "class", "scope": "signAccessToken", "scopeKind": "class"}, {"_type": "tag", "name": "prisma", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/auth.js", "pattern": "/^const prisma = require('..\\/lib\\/prisma');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "refresh", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/auth.js", "pattern": "/^async function refresh({ sessionToken, refreshToken }, context = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "({ sessionToken, refreshToken }, context = {})"}, {"_type": "tag", "name": "revokeSession", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/auth.js", "pattern": "/^async function revokeSession(where) {$/", "language": "JavaScript", "kind": "function", "signature": "(where)"}, {"_type": "tag", "name": "secondsFromNow", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/auth.js", "pattern": "/^function secondsFromNow(seconds) {$/", "language": "JavaScript", "kind": "function", "signature": "(seconds)"}, {"_type": "tag", "name": "signAccessToken", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/auth.js", "pattern": "/^function signAccessToken(user) {$/", "language": "JavaScript", "kind": "function", "signature": "(user)"}, {"_type": "tag", "name": "signup", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/auth.js", "pattern": "/^  signup,$/", "language": "JavaScript", "kind": "field", "scope": "module.exports", "scopeKind": "class"}, {"_type": "tag", "name": "signup", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/auth.js", "pattern": "/^async function signup({ email, password, name }, context = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "({ email, password, name }, context = {})"}, {"_type": "tag", "name": "sub", "path": "/home/kavia/workspace/code-generation/ledgerflow-unified-platform-809-1075/ledgerflow_backend_api/src/services/auth.js", "pattern": "/^  const payload = { sub: user.id, email: user.email };$/", "language": "JavaScript", "kind": "property", "scope": "signAccessToken.payload", "scopeKind": "class"}], "hash": "26a3112636e4f127794019578919764c", "format-version": 4, "code-base-name": "ledgerflow_backend_api", "filename": "ledgerflow_backend_api/src/services/auth.js", "fields": [{"name": "const payload = { sub: user.id, email: user.email };", "scope": "signAccessToken.payload", "scopeKind": "class", "description": "unavailable"}, {"name": "signup,", "scope": "module.exports", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"34": ""}]}